generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    networkId Int      @id
    username  String
    pfp       String
    role      Role
    joinedAt  DateTime @default(now())

    createdJobs Room[]
}

enum Role {
    LOCKED
    UNVERIFIED
    USER
    MODERATOR
    DEVELOPER
}

model Room {
    roomId Int
    host   Host
    name   String

    antifreezeMessage String
    active            Boolean         @default(true)
    locked            Boolean         @default(false)
    errored           Boolean         @default(false)
    runs              AntifreezeRun[]

    jobCreator   User     @relation(fields: [jobCreatorId], references: [networkId])
    jobCreatorId Int
    jobCreatedAt DateTime @default(now())

    @@id([roomId, host])
    @@index([host, errored])
}

enum Host {
    SE
    SO
    MSE
}

model AntifreezeRun {
    id        String           @id @default(cuid())
    room      Room             @relation(fields: [roomId, roomHost], references: [roomId, host])
    roomId    Int
    roomHost  Host
    result    AntifreezeResult
    error     String?
    checkedAt DateTime         @default(now())
}

enum AntifreezeResult {
    OK
    ANTIFREEZED
    ERROR
}
